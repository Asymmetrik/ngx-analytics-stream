{"version":3,"sources":["analyticStream.js"],"names":["window","document","conf","url","sessionCookie","product","skipPageView","startTime","Date","prevOnLoad","onload","_getSessionId","loadTime","getTime","push","eventLabel","eventCategory","eventValue","pageview","sessionId","cookie","split","map","filter","cookiepair","shift","btoa","Math","random","encodeURIComponent","_set","data","key","defaultValue","undefined","hasKey","reduce","acc","keypart","config","obj","payload","datalayer","classification","dispatchEvent","CustomEvent","event","detail","cancelable","bubbles","send","str","JSON","stringify","req","XMLHttpRequest","addEventListener","err","console","log","open","setRequestHeader","properties","location","host","pathname","search","hash","pageevent","label","category","values","analyticStream"],"mappings":"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","file":"analyticStream.js","sourcesContent":["/* eslint-env browser */\n\n(function(window, document) {\n\t'use strict';\n\n\t/**\n\t * @type {{url: string, sessionCookie: string, product: string}}\n\t */\n\tconst conf = {\n\t\turl: null,\n\t\tsessionCookie: null,\n\t\tproduct: '',\n\t\tskipPageView: false\n\t};\n\n\t/**\n\t * Track page load time\n\t * @type {Date}\n\t */\n\tconst startTime = new Date();\n\n\n\tconst prevOnLoad = window.onload;\n\twindow.onload = () => {\n\n\t\t// If there are already onload events, trigger them first\n\t\tif (prevOnLoad) prevOnLoad();\n\n\t\t// Initialize the session ID\n\t\t_getSessionId();\n\n\t\t// Calculate the page load time\n\t\tlet loadTime = new Date().getTime() - startTime.getTime();\n\n\t\t// Now push a page load analytics event\n\t\tpush({\n\t\t\teventLabel: 'onload',\n\t\t\teventCategory: 'page load',\n\t\t\teventValue: {\n\t\t\t\t'page.loadTime': loadTime\n\t\t\t}\n\t\t});\n\n\t\t// Now push a page view event, unless we've explicitly asked not to\n\t\tif (!conf.skipPageView) {\n\t\t\tpageview();\n\t\t}\n\t};\n\n\t/**\n\t * Track the user's session ID from a cookie\n\t * @type {string|null}\n\t */\n\tlet sessionId = null;\n\tfunction _getSessionId() {\n\t\t// Get the session ID cookie\n\t\tif (!sessionId && conf.sessionCookie && document.cookie) {\n\t\t\tsessionId = document.cookie.split('; ')\n\t\t\t\t// Split each cookie into key, value\n\t\t\t\t.map(cookie => cookie.split('='))\n\t\t\t\t// Only get the cookie with the key we're looking for\n\t\t\t\t.filter(cookiepair => cookiepair[0] === conf.sessionCookie)\n\t\t\t\t// Only return the value, not the key\n\t\t\t\t.map(cookiepair => cookiepair[1])\n\t\t\t\t.shift();\n\n\t\t}\n\t\t// If there isn't a session ID cookie yet, create one\n\t\tif (!sessionId && conf.sessionCookie && window.btoa && Math.random) {\n\t\t\tsessionId = window.btoa(conf.product + Math.random());\n\t\t\tdocument.cookie = conf.sessionCookie + '=' + encodeURIComponent(sessionId);\n\t\t}\n\t}\n\n\t/**\n\t * Sets a key/value pair, unless a value is already set for the key.\n\t * This checks both JSONPath-style keys and also nested objects\n\t *\n\t * @param {Object} data - The object in which to set the key\n\t * @param {string} key - The key to check, which could include dots between pieces\n\t * @param {Object} defaultValue - The value to set unless the key already exists\n\t * @returns {Object} The current value of the key\n\t * @private\n\t */\n\tfunction _set(data, key, defaultValue) {\n\t\tif (!data || !key) {\n\t\t\treturn undefined;\n\t\t}\n\t\t// Split the key by dots and iterate into the object to see if the key path exists\n\t\tlet hasKey = key.split('.').reduce((acc, keypart) => {\n\t\t\tif (!acc || !(keypart in acc)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn acc[keypart];\n\t\t\t}, data);\n\n\t\tif (hasKey !== undefined) {\n\t\t\treturn hasKey;\n\t\t}\n\n\t\t// Since we couldn't find the key, set it to the default value\n\t\tdata[key] = defaultValue;\n\t\treturn data[key];\n\t}\n\n\t/**\n\t * Configure the analytics stream.  Call this as soon as the script tag has loaded\n\t *\n\t * @param {string} obj.url - The URL of the analytics endpoint.\n\t * @param {string} obj.sessionCookie - The name of the cookie storing the user session. If this cookie\n\t *     doesn't exist it will be created.\n\t * @param {string} obj.product - The name of the product or site being tracked, to differentiate from\n\t *     other sites using the same tracking endpoint.\n *     @param {boolean} obj.skipPageView - If set to true, a pageview event will not immediately be sent\n\t *     once the page loads. If false or omitted, a pageview will be sent.\n\t *\n\t * @returns {{url: string, sessionCookie: string, product: string}} The configuration object\n\t */\n\tfunction config(obj) {\n\t\t// Sanitize keys\n\t\tif (obj.url) {\n\t\t\tconf.url = obj.url;\n\t\t}\n\t\tif (obj.sessionCookie) {\n\t\t\tconf.sessionCookie = obj.sessionCookie;\n\t\t}\n\t\tif (obj.product) {\n\t\t\tconf.product = obj.product;\n\t\t}\n\t\tif (obj.skipPageView) {\n\t\t\tconf.skipPageView = obj.skipPageView;\n\t\t}\n\t\treturn conf;\n\t}\n\n\t/**\n\t * Pushes a payload to the analytics endpoint.\n\t *\n\t * @param {Object} payload - The payload to send, containing the following keys:\n\t * @param {string} payload.eventLabel - A name for the event that occurred\n\t * @param {string} payload.eventCategory - The type of event that occurred\n\t * @param {Object} payload.eventValue - A set of key/value pairs that capture current page state.\n\t *     These will be sent to the data layer\n\t * @param {string=} payload.classification - PHI, FOUO, etc.  Can be null or missing\n\t * @param {string=} payload.product - The product to log data for (defaults to product in config)\n\t * @param {string=} payload.sessionId - The user's session ID (defaults to session ID from cookie)\n\t * @param {number=} payload.timestamp - The current timestamp\n\t */\n\tfunction push(payload) {\n\t\t_set(payload, 'product', conf.product);\n\t\t_set(payload, 'sessionId', sessionId);\n\t\t_set(payload, 'timestamp', new Date().getTime());\n\n\t\t// If there is a Google Analytics datalayer and this payload is not classified, push it there too\n\t\tif (window.datalayer && !payload.classification) {\n\t\t\t// TODO Format the payload appropriately\n\t\t\twindow.datalayer.push(payload);\n\t\t}\n\n\t\t// Dispatch an event to the window object to allow other plugins to interact with the data.\n\t\t// TODO Create a shim for this that also works in IE\n\t\tif (window.dispatchEvent && window.CustomEvent) {\n\t\t\tconst event = new window.CustomEvent('push.analyticStream', {\n\t\t\t\tdetail: payload,\n\t\t\t\tcancelable: false,\n\t\t\t\tbubbles: false\n\t\t\t});\n\t\t\twindow.dispatchEvent(event);\n\t\t}\n\n\t\t// TODO Do this in batches\n\t\tsend(payload);\n\t}\n\n\tfunction send(payload) {\n\t\tif (conf.url) {\n\t\t\tconst str = JSON.stringify(payload);\n\n\t\t\t// Create an unadorned AJAX request. There's no need to wait for a response.\n\t\t\tlet req = new XMLHttpRequest();\n\t\t\treq.addEventListener('error', function(err) { console.log(err); });\n\t\t\treq.open('POST', conf.url);\n\t\t\treq.setRequestHeader('Content-type', 'application/json');\n\t\t\treq.send(str);\n\t\t}\n\t}\n\n\t/**\n\t * Tracks a pageview and sends all the appropriate properties\n\t * @param {Object} properties - Any additional properties to capture\n\t */\n\tfunction pageview(properties) {\n\t\t// Automatically pull in the current page URL\n\t\t_set(properties, 'page', {});\n\t\t_set(properties, 'page.host', window.location.host);\n\t\t_set(properties, 'page.pathname', window.location.pathname);\n\t\t_set(properties, 'page.query', window.location.search);\n\t\t_set(properties, 'page.hash', window.location.hash);\n\n\t\tpush({\n\t\t\teventLabel: 'pageview',\n\t\t\teventCategory: 'page load',\n\t\t\teventValue: properties\n\t\t});\n\t}\n\n\t/**\n\t * Returns a click-tracking function that can be added to any link tag, for convenience.\n\t *\n\t * `<a href=\"/my-link\" onclick=\"analyticStream.pagevent(\"my link\", \"link\", \"click\")\">Link</a>`\n\t *\n\t * @param {string=} label The event label\n\t * @param {string=} category The event category\n\t * @param {Object=} values Any values to transmit with this click event\n\t * @returns {Function}\n\t */\n\tfunction pageevent(label, category, values) {\n\t\treturn function(event) {\n\t\t\tpush({\n\t\t\t\teventLabel: label,\n\t\t\t\teventCategory: category,\n\t\t\t\teventValue: values\n\t\t\t});\n\t\t\treturn true;\n\t\t};\n\t}\n\n\t/**\n\t * Registers a global object that can send analytics events\n\t *\n\t * @type {{config: config, push: push, pageview: pageview, pageevent: pageevent}}\n\t */\n\twindow.analyticStream = {\n\t\tconfig: config,\n\t\tpush: push,\n\t\tpageview: pageview,\n\t\tpageevent: pageevent\n\t};\n\n})(window, document);\n"]}